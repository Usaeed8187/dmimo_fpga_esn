/*
 * Copyright 2025 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually
 * edited  */
/* The following lines can be configured to regenerate this file during cmake */
/* If manual edits are made, the following tags should be modified accordingly.
 */
/* BINDTOOL_GEN_AUTOMATIC(0) */
/* BINDTOOL_USE_PYGCCXML(0) */
/* BINDTOOL_HEADER_FILE(pkt_detect.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(0a2f044cbac65d9a5717e7d079e30961) */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ncjt/pkt_detect.h>
// pydoc.h is automatically generated in the build directory
#include <pkt_detect_pydoc.h>

void bind_pkt_detect(py::module &m) {

  using pkt_detect = ::gr::ncjt::pkt_detect;

  py::class_<pkt_detect, gr::block, gr::basic_block,
             std::shared_ptr<pkt_detect>>(m, "pkt_detect", D(pkt_detect))

      .def(py::init(&pkt_detect::make), py::arg("nchans"),
           py::arg("preamblelen"), py::arg("dataframelen"),
           py::arg("samplerate"), py::arg("pktspersec"), py::arg("rxpwr_thrd"),
           py::arg("acorr_thrd"), py::arg("xcorr_thrd"),
           py::arg("max_corr_len"), py::arg("sync_all"),
           py::arg("debug") = false, D(pkt_detect, make))

      ;
}
