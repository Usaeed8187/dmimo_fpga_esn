/*
 * Copyright 2025 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually
 * edited  */
/* The following lines can be configured to regenerate this file during cmake */
/* If manual edits are made, the following tags should be modified accordingly.
 */
/* BINDTOOL_GEN_AUTOMATIC(0) */
/* BINDTOOL_USE_PYGCCXML(0) */
/* BINDTOOL_HEADER_FILE(llr_combine.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(3cd423645feacb8e3457415091893904) */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/ncjt/llr_combine.h>
// pydoc.h is automatically generated in the build directory
#include <llr_combine_pydoc.h>

void bind_llr_combine(py::module &m) {

  using llr_combine = ::gr::ncjt::llr_combine;

  py::class_<llr_combine, gr::tagged_stream_block, gr::block, gr::basic_block,
             std::shared_ptr<llr_combine>>(m, "llr_combine", D(llr_combine))

      .def(py::init(&llr_combine::make), py::arg("nstrm"), py::arg("modtype1"),
           py::arg("modtype2"), py::arg("blocksize"), py::arg("debug") = false,
           D(llr_combine, make))

      ;
}
