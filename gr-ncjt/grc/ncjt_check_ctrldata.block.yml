id: ncjt_check_ctrldata
label: Check CtrlData
category: '[dMIMO]'

templates:
  imports: from gnuradio import ncjt
  make: ncjt.check_ctrldata(${nstrm}, ${ctrl_datalen}, ${has_txseq}, ${has_rxseq}, ${has_llr}, ${extract_llr}, ${waitrdy}, ${debug})


parameters:
  - id: nstrm
    label: Number of Streams
    dtype: int
    default: 1
    options: [ 1, 2, 3, 4, 5, 6, 7, 8 ]
    hide: part
  - id: ctrl_datalen
    label: Ctrl Data Length
    dtype: int
    default: '0'
  - id: has_txseq
    label: Has Tx SeqNo
    dtype: bool
    default: 'False'
    options: [ 'True', 'False' ]
    option_labels: [ True, False ]
  - id: has_rxseq
    label: Has Rx SeqNo
    dtype: bool
    default: 'False'
    options: [ 'True', 'False' ]
    option_labels: [ True, False ]
  - id: has_llr
    label: Has LLRs
    dtype: bool
    default: 'False'
    options: [ 'True', 'False' ]
    option_labels: [ True, False ]
  - id : extract_llr
    label: Extract LLRs
    dtype: bool
    default: 'False'
    options: [ 'True', 'False' ]
    option_labels: [ True, False ]
  - id : waitrdy
    label: Wait for Ready
    dtype: bool
    default: 'False'
    options: [ 'True', 'False' ]
    option_labels: [ True, False ]
    hide: part
  - id: debug
    label: Debug
    dtype: bool
    default: 'False'
    options: [ 'True', 'False' ]
    option_labels: [ Enable, Disable ]
    hide: part

inputs:
  - label: rxrdy
    domain: message
    optional: true
  - label: in
    domain: stream
    dtype: byte
    vlen: 1
    multiplicity: ${nstrm}
  - label: llr
    domain: message
    optional: true

outputs:
  - label: out
    domain: stream
    dtype: byte
    multiplicity: ${nstrm}

file_format: 1
