function syms = qam_mapping(data, modtype)
% Description
%   Map bit stream to QAM symbols
%
% Inputs:
%   data	  Input bit stream (column or row vector)
%   modtype   Modulation type (BPSK/QPSK/16QAM)
% Output:
%   syms      Complex QAM symbols (column vector)
%
% By Donald Liang, last updated Nov 2, 2023

narginchk(2,2)
assert(min(data(:))==0 && max(data(:))==1)
    
% QAM constellation
switch modtype
    case 1
        constellation = [-1, 1].';
    case 2
        constellation = 1.0/sqrt(2)*[-1+1i, -1-1i, 1+1i, 1-1i].';
    case 4
        constellation = 1/sqrt(10)*[-3+3i, -3+1i, -3-3i, -3-1i, ...
						            -1+3i, -1+1i, -1-3i, -1-1i, ...
						             3+3i,  3+1i,  3-3i,  3-1i, ...
 						             1+3i,  1+1i,  1-3i,  1-1i ].';
    case 6
        constellation = 1/sqrt(42)*[
            -7+7i, -7+5i, -7+1i, -7+3i, -7-7i, -7-5i, -7-1i, -7-3i, ...
            -5+7i, -5+5i, -5+1i, -5+3i, -5-7i, -5-5i, -5-1i, -5-3i, ...
            -1+7i, -1+5i, -1+1i, -1+3i, -1-7i, -1-5i, -1-1i, -1-3i, ...
            -3+7i, -3+5i, -3+1i, -3+3i, -3-7i, -3-5i, -3-1i, -3-3i, ...
             7+7i,  7+5i,  7+1i,  7+3i,  7-7i,  7-5i,  7-1i,  7-3i, ...
             5+7i,  5+5i,  5+1i,  5+3i,  5-7i,  5-5i,  5-1i,  5-3i, ...
             1+7i,  1+5i,  1+1i,  1+3i,  1-7i,  1-5i,  1-1i,  1-3i, ...
             3+7i,  3+5i,  3+1i,  3+3i,  3-7i,  3-5i,  3-1i,  3-3i ].';
    case 8
        constellation = 1/sqrt(170)*[ ...
            -15+15i, -15+13i, -15+9i, -15+11i, -15+1i, -15+3i, -15+7i, -15+5i, ...
            -15-15i, -15-13i, -15-9i, -15-11i, -15-1i, -15-3i, -15-7i, -15-5i, ...
            -13+15i, -13+13i, -13+9i, -13+11i, -13+1i, -13+3i, -13+7i, -13+5i, ...
            -13-15i, -13-13i, -13-9i, -13-11i, -13-1i, -13-3i, -13-7i, -13-5i, ... 
            -9+15i, -9+13i, -9+9i, -9+11i, -9+1i, -9+3i, -9+7i, -9+5i, ... 
            -9-15i, -9-13i, -9-9i, -9-11i, -9-1i, -9-3i, -9-7i, -9-5i, ...
            -11+15i, -11+13i, -11+9i, -11+11i, -11+1i, -11+3i, -11+7i, -11+5i, ...
            -11-15i, -11-13i, -11-9i, -11-11i, -11-1i, -11-3i, -11-7i, -11-5i, ...
            -1+15i, -1+13i, -1+9i, -1+11i, -1+1i, -1+3i, -1+7i, -1+5i, ...
            -1-15i, -1-13i, -1-9i, -1-11i, -1-1i, -1-3i, -1-7i, -1-5i, ...
            -3+15i, -3+13i, -3+9i, -3+11i, -3+1i, -3+3i, -3+7i, -3+5i, ...
            -3-15i, -3-13i, -3-9i, -3-11i, -3-1i, -3-3i, -3-7i, -3-5i, ...
            -7+15i, -7+13i, -7+9i, -7+11i, -7+1i, -7+3i, -7+7i, -7+5i, ...
            -7-15i, -7-13i, -7-9i, -7-11i, -7-1i, -7-3i, -7-7i, -7-5i, ...
            -5+15i, -5+13i, -5+9i, -5+11i, -5+1i, -5+3i, -5+7i, -5+5i, ...
            -5-15i, -5-13i, -5-9i, -5-11i, -5-1i, -5-3i, -5-7i, -5-5i, ...
            15+15i, 15+13i, 15+9i, 15+11i, 15+1i, 15+3i, 15+7i, 15+5i, ...
            15-15i, 15-13i, 15-9i, 15-11i, 15-1i, 15-3i, 15-7i, 15-5i, ...
            13+15i, 13+13i, 13+9i, 13+11i, 13+1i, 13+3i, 13+7i, 13+5i, ...
            13-15i, 13-13i, 13-9i, 13-11i, 13-1i, 13-3i, 13-7i, 13-5i, ...
            9+15i, 9+13i, 9+9i, 9+11i, 9+1i, 9+3i, 9+7i, 9+5i, ...
            9-15i, 9-13i, 9-9i, 9-11i, 9-1i, 9-3i, 9-7i, 9-5i, ...
            11+15i, 11+13i, 11+9i, 11+11i, 11+1i, 11+3i, 11+7i, 11+5i, ...
            11-15i, 11-13i, 11-9i, 11-11i, 11-1i, 11-3i, 11-7i, 11-5i, ...
            1+15i, 1+13i, 1+9i, 1+11i, 1+1i, 1+3i, 1+7i, 1+5i, ...
            1-15i, 1-13i, 1-9i, 1-11i, 1-1i, 1-3i, 1-7i, 1-5i, ...
            3+15i, 3+13i, 3+9i, 3+11i, 3+1i, 3+3i, 3+7i, 3+5i, ...
            3-15i, 3-13i, 3-9i, 3-11i, 3-1i, 3-3i, 3-7i, 3-5i, ...
            7+15i, 7+13i, 7+9i, 7+11i, 7+1i, 7+3i, 7+7i, 7+5i, ...
            7-15i, 7-13i, 7-9i, 7-11i, 7-1i, 7-3i, 7-7i, 7-5i, ...
            5+15i, 5+13i, 5+9i, 5+11i, 5+1i, 5+3i, 5+7i, 5+5i, ...
            5-15i, 5-13i, 5-9i, 5-11i, 5-1i, 5-3i, 5-7i, 5-5i].';
    otherwise
        error('Unsupported modulation')
end

% Reshape input data
K = log2(size(constellation,1));
data = reshape(data, K, numel(data)/K);

% Compute symbol indices (convert from binary to decimal)
twos    = pow2(0:1:K-1); % LSB first
symindx = twos * double(data) + 1;

% Map indices to QAM symbols
syms  = constellation(symindx);




